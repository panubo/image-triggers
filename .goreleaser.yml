version: 2

env:
  - GITHUB_REPOSITORY={{ if index .Env "GITHUB_REPOSITORY"  }}{{ .Env.GITHUB_REPOSITORY }}{{ else }}my/repo{{ end }}

before:
  hooks:
    - go mod download

builds:
  - main: main.go
    binary: "{{ .ProjectName }}"
    goos:
      - darwin
      - linux
      - freebsd
      - windows
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0

archives:
  - formats: ["tar.gz"]
    wrap_in_directory: true
    format_overrides:
      - goos: windows
        formats: ["zip"]
    name_template: "{{ .ProjectName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
      - LICENSE
      - README.md

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "SNAPSHOT-{{.ShortCommit}}"

changelog:
  sort: asc
  filters:
    exclude:
      - "^test:"
      - "README"
      - Merge pull request
      - Merge branch

# Push arch specific images (push is required for multi-arch manifests)
dockers:
  - image_templates:
      - "public.ecr.aws/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
    use: buildx
    goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"
  - image_templates:
      - "public.ecr.aws/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
      - "quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
    use: buildx
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/arm64"

# Push multi-arch manifests
docker_manifests:
  # Amazon ECR Public Gallery
  - name_template: "public.ecr.aws/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}"
    image_templates:
      - "public.ecr.aws/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "public.ecr.aws/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
  - name_template: "public.ecr.aws/{{ .Env.GITHUB_REPOSITORY }}:{{.Major}}.{{.Minor}}"
    image_templates:
      - "public.ecr.aws/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "public.ecr.aws/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
  # Quay.io
  - name_template: "quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}"
    image_templates:
      - "quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
  - name_template: "quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{.Major}}.{{.Minor}}"
    image_templates:
      - "quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
      - "quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"

release:
  github:
    owner: "{{ dir .Env.GITHUB_REPOSITORY }}"
    name: "{{ base .Env.GITHUB_REPOSITORY }}"
  draft: false
  footer: |
    ## Docker images
    [Quay.io {{ base .Env.GITHUB_REPOSITORY }}](https://quay.io/repository/{{ .Env.GITHUB_REPOSITORY }}?tab=tags)
    ```shell
    docker pull quay.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}
    ```
