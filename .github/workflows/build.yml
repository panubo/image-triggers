name: build

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
         fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.PANUBUILD_DOCKERHUB_USERNAME }}
          password: ${{ secrets.PANUBUILD_DOCKERHUB_TOKEN }}

      - name: Login to Quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.PANUBUILD_QUAYIO_USERNAME }}
          password: ${{ secrets.PANUBUILD_QUAYIO_TOKEN }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # - name: Make test
      #   run: |
      #     make test

      - name: GoReleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            goreleaser
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            goreleaser --snapshot
          fi

      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: gcsproxy-le
          path: dist/*
